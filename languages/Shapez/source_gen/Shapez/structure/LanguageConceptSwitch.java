package Shapez.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Canvas = 0;
  public static final int Circle = 1;
  public static final int Color = 2;
  public static final int ColorReference = 3;
  public static final int Shape = 4;
  public static final int ShapeColor = 5;
  public static final int Square = 6;
  public static final int Triangle = 7;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xbf730aef8e694202L, 0x919a4a1203c3a8aaL);
    builder.put(0x724cd02669807df8L, Canvas);
    builder.put(0x724cd02669807de7L, Circle);
    builder.put(0x724cd02669818634L, Color);
    builder.put(0x724cd0266982f7efL, ColorReference);
    builder.put(0x724cd02669807de3L, Shape);
    builder.put(0x724cd0266982f80cL, ShapeColor);
    builder.put(0x724cd02669807df2L, Square);
    builder.put(0x570ffcfc6e2f853aL, Triangle);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
